[{"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/index.js":"1","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/App.js":"2","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/stores/user.js":"3","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/fetchs.js":"4","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/MyCourse.js":"5","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Plan.js":"6","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Profile.js":"7","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Landing.js":"8","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Header.js":"9","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Footer.js":"10","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/LogIn.js":"11","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/LandingBody.js":"12","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/ContactUs.js":"13","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/colors.js":"14","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/stores/log.js":"15","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/TransferList.js":"16","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/List.js":"17","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Select.js":"18","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Admin.js":"19"},{"size":627,"mtime":1656788221250,"results":"20","hashOfConfig":"21"},{"size":1320,"mtime":1657070563716,"results":"22","hashOfConfig":"21"},{"size":451,"mtime":1656887379046,"results":"23","hashOfConfig":"21"},{"size":5122,"mtime":1657639839328,"results":"24","hashOfConfig":"21"},{"size":3431,"mtime":1657070444218,"results":"25","hashOfConfig":"21"},{"size":7244,"mtime":1656855424856,"results":"26","hashOfConfig":"21"},{"size":2792,"mtime":1657070354832,"results":"27","hashOfConfig":"21"},{"size":739,"mtime":1656793256475,"results":"28","hashOfConfig":"21"},{"size":4899,"mtime":1656887588477,"results":"29","hashOfConfig":"21"},{"size":1353,"mtime":1656773091531,"results":"30","hashOfConfig":"21"},{"size":5172,"mtime":1657640056407,"results":"31","hashOfConfig":"21"},{"size":3732,"mtime":1656792534270,"results":"32","hashOfConfig":"21"},{"size":1835,"mtime":1656855788546,"results":"33","hashOfConfig":"21"},{"size":230,"mtime":1656795137521,"results":"34","hashOfConfig":"21"},{"size":732,"mtime":1657639924558,"results":"35","hashOfConfig":"21"},{"size":3760,"mtime":1657041858564,"results":"36","hashOfConfig":"21"},{"size":1721,"mtime":1657067981836,"results":"37","hashOfConfig":"21"},{"size":1214,"mtime":1657048533384,"results":"38","hashOfConfig":"21"},{"size":8788,"mtime":1657641452274,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f1e5i7",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"99"},"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/index.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/App.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/stores/user.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/fetchs.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/MyCourse.js",["100"],[],"import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getCourses } from '../components/utils/fetchs';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nconst MyCourse = () => {\n\n    const [courses, setCourses] = useState([])\n    const [open, setOpen] = useState({});\n    const [selectedLink, setLink] = useState('')\n    const currentUser = useSelector(state => state.user.value)\n\n    const handleClick = (index) => {\n        setOpen({...open, [index]: !open[index]});\n    };\n    const handleLoadVideo = (link) => {\n        console.log(link)\n        setLink(link)\n    }\n    useEffect(()=> {\n        const fetchCourses = async() => {\n            let response = await getCourses()\n            let open = new Array(response.length).fill(false);\n            console.log(response)\n            setOpen({...open})\n            setCourses(response)\n        }\n        fetchCourses()\n    }, [])\n\n\n    if (currentUser===''){\n        return <Navigate replace to='/'/>\n    }\n    return ( \n        <Body>\n            <List\n                sx={{ width: '100%', maxWidth: 200, height: 500, bgcolor: 'background.paper' }}\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                        Courses\n                    </ListSubheader>\n                }\n                >\n                {courses.map((course, index) => {\n                    return (\n                        <React.Fragment key={uuidv4()}>\n                            <ListItemButton key={uuidv4()} onClick={()=>handleClick(index)}>\n                                <ListItemText  primary={course.title} />\n                            </ListItemButton>\n                            <Collapse key={uuidv4()} in={open[index]} timeout=\"auto\" unmountOnExit>\n                                <List key={uuidv4()} component=\"div\" disablePadding>\n                            {course.links.map((link) => {\n                                return (        \n                                    <ListItemButton key={uuidv4()} sx={{ pl: 4 }} onClick={()=>handleLoadVideo(link.link_url)}>\n                                        <ListItemText primary={link.title}/>\n                                    </ListItemButton>   \n                                )\n                            })}\n                                </List>\n                            </Collapse>\n                        </React.Fragment>\n                    )\n                })}\n            </List>\n            <iframe\n                width=\"853\"\n                height=\"480\"\n                src={selectedLink}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"Embedded youtube\"\n            />\n        </Body>\n    );\n}\n \nexport default MyCourse;\n\nconst Body = styled.div`\n    display: flex;\n`","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Plan.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Profile.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Landing.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Header.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Footer.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/LogIn.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/LandingBody.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/ContactUs.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/colors.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/utils/stores/log.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/TransferList.js",["101","102"],[],"import React, {useState, useEffect} from 'react';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport { changeUserBanStatus } from './utils/fetchs';\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nconst TransferList = ({rightData, leftData}) => {\n  const [checked, setChecked] = useState([]);\n  const [left, setLeft] = useState([]);\n  const [right, setRight] = useState([]);\n\n  useEffect(()=> {\n    setLeft(()=>[...leftData])\n    setRight(()=>[...rightData])\n  }, [leftData, rightData])\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    // const newChecked = [...checked];\n    const newChecked = [];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleCheckedRight = async() => {\n    let response = await changeUserBanStatus(leftChecked[0], true)\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = async () => {\n    let response = await changeUserBanStatus(rightChecked[0], false)\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (items) => (\n    <Paper sx={{ width: 200, height: 230, overflow: 'auto' }}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n          return (\n            <ListItem\n              key={value}\n              role=\"listitem\"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{\n                    'aria-labelledby': labelId,\n                  }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={value} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n      <Grid item>{customList(left)}\n      <h1 style={{textAlign: 'center'}}>Not Banned</h1>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            sx={{ my: 0.5 }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            sx={{ my: 0.5 }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}\n      <h1 style={{textAlign: 'center'}}>Banned</h1>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default TransferList;","/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/List.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/components/Select.js",[],[],"/Users/alejandroortega/Desktop/UpTop-FullStack/client/src/pages/Admin.js",["103","104","105","106","107"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport TransferList from '../components/TransferList';\nimport { createNewCourse, createNewLink, deleteCourse, deleteLink, getAdminCourses, getBannedUsers, getCourseLinks, getNotBannedUsers, getPlans, updateCourseInformation, updateLinkInformation } from '../components/utils/fetchs';\nimport List from '../components/List';\nimport { Button, TextField } from '@mui/material';\nimport { Palette } from '../components/utils/colors';\nimport BasicSelect from '../components/Select';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst Admin = () => {\n    const initialCourseState = {\n      title: '',\n      description: '',\n      image_url: '',\n      plan_id: 1\n    }\n\n    const initialLinkState = {\n      title: '',\n      link_url: '',\n      course_id: '',\n    }\n    const currentUser = useSelector(state => state.user.value)\n    const [expanded, setExpanded] = useState(false);\n    const [banned , setBanned] = useState([])\n    const [notBanned, setNotBanned] = useState([])\n    const [courses, setCourses] = useState([])\n    const [selectedCourse, setSelectedCourse] = useState(initialCourseState);\n    const [selectedLink, setSelectedLink] = useState(initialLinkState)\n    const [links, setLinks] = useState([])\n    const [update, triggerUpdate] = useState(false)\n    const [plans, setPlans] = useState([])\n\n    const coursesTitle = courses.map(course => course.title);\n    const linksTitle = links.map(link => link.title);\n    const [isCourseSelected, setIsCourseSelected] = useState(false)\n    const [isLinkSelected, setIsLinkSelected] = useState(false)\n    \n    const handleCourseSelected = async (title, currentIndex) => {\n      if(currentIndex !== 0){\n        let course = courses.find(course => course.title === title)\n        setSelectedCourse(()=>({...course}))\n        setLinks([...await getCourseLinks(course.id)])\n        setIsCourseSelected(true)\n        setSelectedLink(()=>({...selectedLink,['course_id']: course.id}))\n      }else{\n        setLinks([])\n        setSelectedCourse(initialCourseState)\n        setIsCourseSelected(false)\n        setSelectedLink(()=>({...selectedLink,['course_id']: ''}))\n      }\n    }\n\n    const handleLinkSelected = (title, currentIndex) => {\n      if(currentIndex !== 0){\n        let link = selectedCourse.links.find(link => link.title === title)\n        setSelectedLink({...link})\n        setIsLinkSelected(true)\n      }else{\n        setSelectedLink(initialLinkState)\n        setIsLinkSelected(false)\n      }\n    }\n\n    const onChangeInformationOfCourse = (e) => {\n      let name = e.target.name, value=e.target.value\n      setSelectedCourse({...selectedCourse,[name]: value})\n    }\n\n    const onChangeInformationOfLink = (e) => {\n      let name = e.target.name, value=e.target.value\n      setSelectedLink({...selectedLink,[name]: value})\n    }\n\n    const handleCourseAction = async() => {\n      if(isCourseSelected){\n        //patch\n        updateCourseInformation(selectedCourse)\n      }else{\n        createNewCourse(selectedCourse)\n        setSelectedCourse(()=> initialCourseState)\n      }\n      triggerUpdate(prev => !prev)\n    }\n\n    const handleLinkAction = async() => {\n      if(isLinkSelected){\n        updateLinkInformation(selectedLink)\n      }else{\n        createNewLink(selectedLink)\n        setSelectedLink(()=> initialLinkState)\n      }\n      window.location.reload(false)\n    }\n\n    const handleLinkDelete = async() => {\n      let response = deleteLink(selectedLink.id)\n      setSelectedLink(()=>initialLinkState)\n      window.location.reload(false)\n    }\n\n    const handleCourseDelete = () => {\n      let response= deleteCourse(selectedCourse.id)\n      triggerUpdate(prev => !prev)\n      setSelectedCourse(()=> initialCourseState)\n      setIsCourseSelected(()=> false)\n    }\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n\n    useEffect(()=>{\n      const getInfo = async() => {\n        let response = await getBannedUsers()\n        setBanned([...response.map(user => user.username)])\n        response = await getNotBannedUsers()\n        setNotBanned([...response.map(user => user.username)])\n        response = await getAdminCourses()\n        setCourses([...response])\n        response = await getPlans()\n        setPlans([...response])\n        try{\n          response = await getCourseLinks(selectedCourse.id)\n          setLinks([...response])\n        }catch(e){\n\n        }\n      }\n      getInfo();\n    }, [update, selectedCourse])\n    \n    if (currentUser===''){\n      return <Navigate replace to='/'/>\n    } \n    return (\n      <Body>\n        <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n          <AccordionSummary\n            aria-controls=\"panel1bh-content\"\n            id=\"panel1bh-header\"\n          >\n            <Typography sx={{ width: '33%', flexShrink: 0 }}>\n              Users\n            </Typography>\n            <Typography sx={{ color: 'text.secondary' }}>Manage all the users</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TransferList rightData={banned} leftData={notBanned}/>\n          </AccordionDetails>\n        </Accordion>\n\n\n        <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n          <AccordionSummary\n            aria-controls=\"panel2bh-content\"\n            id=\"panel2bh-header\"\n          >\n            <Typography sx={{ width: '33%', flexShrink: 0 }}>Courses</Typography>\n            <Typography sx={{ color: 'text.secondary' }}>\n              Manage all the courses and link availables\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <h1>Select a course to manage</h1>\n            <UpdateSection>\n              <List newData={coursesTitle} selected={handleCourseSelected}/>\n              <UpdateForm>\n                <TextField sx={{margin: '10px 0px',}} label=\"Title\" name='title' placeholder='Title of Course' value={selectedCourse.title} onChange={onChangeInformationOfCourse}/>\n                <TextField sx={{margin: '10px 0px'}} label=\"Description\" name='description' placeholder='Description of Course' multiline rows={4} value={selectedCourse.description} onChange={onChangeInformationOfCourse}/>\n                <ButtonGroup>\n                  <Button sx={{backgroundColor: Palette.SECONDARY, margin: '0 10px', color: 'black'}} onClick={handleCourseAction}> {isCourseSelected? 'Update Course' : 'Create Course'}</Button>\n                  {isCourseSelected? <Button sx={{backgroundColor: 'red', margin: '0 10px', color: 'black'}} onClick={handleCourseDelete}>Delete Course</Button> : null} \n                </ButtonGroup>\n              </UpdateForm>\n              <UpdateForm> \n                <BasicSelect plans={plans} selected={selectedCourse.plan_id? selectedCourse.plan_id : null} onChange={onChangeInformationOfCourse}/>\n              </UpdateForm> \n            </UpdateSection>\n            \n            {isCourseSelected? (\n            <>\n            <h1>Select a link to manage</h1>\n            <UpdateSection>\n              <List newData={links.map(link => link.title)} selected={handleLinkSelected}/>\n              <UpdateForm>\n                <TextField sx={{margin: '10px 0px',}}label=\"Title\" name='title' placeholder='Title of Link' value={selectedLink.title} onChange={onChangeInformationOfLink}/>\n                <TextField sx={{margin: '10px 0px'}}label=\"Link_Url\" name='link_url' placeholder='URL Link' value={selectedLink.link_url} onChange={onChangeInformationOfLink}/>\n                <ButtonGroup>\n                  <Button sx={{backgroundColor: Palette.SECONDARY, margin: '0 10px', color: 'black'}} onClick={handleLinkAction}>{isLinkSelected? 'Update link' : 'Create Link'}</Button>\n                  {isLinkSelected? <Button sx={{backgroundColor: 'red', margin: '0 10px', color: 'black'}} onClick={handleLinkDelete} >Delete Link</Button> : null}\n                </ButtonGroup>\n              </UpdateForm> \n              \n            </UpdateSection>\n            </>\n            ): null}\n            \n          </AccordionDetails>\n        </Accordion>\n\n      </Body>\n    );\n  }\n \nexport default Admin;\n\nconst Body = styled.div`\n    height: 500px;\n    overflow: auto;\n`\n\nconst UpdateSection = styled.div`\n    display: flex;\n`\n\nconst UpdateForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 300px;\n`\n\nconst ButtonGroup = styled.div`\n    display: flex;\n`",{"ruleId":"108","severity":1,"message":"109","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":48,"column":9,"nodeType":"110","messageId":"111","endLine":48,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":55,"column":9,"nodeType":"110","messageId":"111","endLine":55,"endColumn":17},{"ruleId":"108","severity":1,"message":"113","line":41,"column":11,"nodeType":"110","messageId":"111","endLine":41,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":51,"column":47,"nodeType":"116","messageId":"117","endLine":51,"endColumn":71,"fix":"118"},{"ruleId":"114","severity":1,"message":"115","line":56,"column":47,"nodeType":"116","messageId":"117","endLine":56,"endColumn":64,"fix":"119"},{"ruleId":"108","severity":1,"message":"112","line":103,"column":11,"nodeType":"110","messageId":"111","endLine":103,"endColumn":19},{"ruleId":"108","severity":1,"message":"112","line":109,"column":11,"nodeType":"110","messageId":"111","endLine":109,"endColumn":19},"no-unused-vars","'ListItemIcon' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'linksTitle' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['course_id'] found.","Property","unnecessarilyComputedProperty",{"range":"120","text":"121"},{"range":"122","text":"121"},[2263,2276],"'course_id'",[2452,2465]]